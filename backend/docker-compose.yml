version: '3.9'
services:
  db:
    container_name: db
    image: postgres
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${PG_USER:-user}
      POSTGRES_PASSWORD: ${PG_PASSWORD:-pass}
      POSTGRES_DB: ${PG_DATABASE:-postgres}
    ports:
      - 5450:5432

  app:
    platform: linux/amd64
    build:
      context: .
      target: local
    volumes:
      - '.:/workspace'
    container_name: app
    image: app
    environment:
      PG_HOST: ${PG_HOST:-db}
      PG_PORT: ${PG_PORT:-5450}
      PG_USER: ${PG_USER:-user}
      PG_PASSWORD: ${PG_PASSWORD:-pass}
      PG_DB_NAME: ${PG_DATABASE:-postgres}
      KAFKA_CLIENT_GROUP_ID: ${KAFKA_CLIENT_GROUP_ID:-starlabs}
      KAFKA_CLIENT_BROKERS: ${KAFKA_CLIENT_BROKERS:-broker:9092}
      KAFKA_CONSUMER_TOPICS: ${KAFKA_CONSUMER_TOPICS:-consumer_topic}
      KAFKA_PRODUCER_TOPIC: ${KAFKA_PRODUCER_TOPIC:-producer_topic}
      KAFKA_SCHEMA_REGISTRY_URL: ${KAFKA_SCHEMA_REGISTRY_URL:-http://schema_registry:8085}
    
    ports:
      - 8080:8080
    depends_on:
      - db

  integration:
    build:
      context: .
      dockerfile: integration-test/Dockerfile
    container_name: integration
    image: integration
    depends_on:
      - app
      - db

volumes:
  pg-data:
