// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Get all vault categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vault category"
                ],
                "summary": "Get all vault categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.VaultCategory"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/assets": {
            "get": {
                "description": "Get all assets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Get all assets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Asset"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create and issue a new asset on Stellar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Create a new asset",
                "parameters": [
                    {
                        "description": "Asset info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateAssetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Asset"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/assets/auth-flags": {
            "post": {
                "description": "Update the authorization flags of a trust line on Stellar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Update authorization flags of a trust line",
                "parameters": [
                    {
                        "description": "Authorization flags",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateAuthFlagsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Asset"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/assets/burn": {
            "post": {
                "description": "Burn an asset on Stellar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Burn an asset",
                "parameters": [
                    {
                        "description": "Asset info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.BurnAssetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Asset"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/assets/clawback": {
            "post": {
                "description": "Clawback an asset on Stellar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Clawback an asset",
                "parameters": [
                    {
                        "description": "Asset info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.ClawbackAssetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/assets/generate-toml": {
            "post": {
                "description": "Create a TOML file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Create a TOML file",
                "parameters": [
                    {
                        "description": "TOML info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.TomlData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/assets/mint": {
            "post": {
                "description": "Mint an asset on Stellar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Mint an asset",
                "parameters": [
                    {
                        "description": "Asset info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.MintAssetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Asset"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/assets/toml/{asset_issuer}": {
            "get": {
                "description": "Retrieve a TOML file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve a TOML file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset issuer",
                        "name": "asset_issuer",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/assets/transfer": {
            "post": {
                "description": "Transfer an asset between wallets on Stellar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Transfer an asset",
                "parameters": [
                    {
                        "description": "Transfer info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.TransferAssetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/role": {
            "get": {
                "description": "List role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Role"
                            }
                        }
                    }
                }
            }
        },
        "/role-permission/permissions": {
            "get": {
                "description": "Role permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RolePermissions"
                ],
                "summary": "Role permissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.RolePermissionResponse"
                            }
                        }
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "description": "Edit users role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Edit users role",
                "operationId": "editUsersRole",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserRole"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Autentication User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Autentication User",
                "operationId": "autentication",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.userResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/user/logout": {
            "post": {
                "description": "Logout User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Logout User",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.userResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get PRofile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "GET Profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserResponse"
                        }
                    }
                }
            }
        },
        "/vault": {
            "post": {
                "description": "Create and issue a new asset on Stellar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vault"
                ],
                "summary": "Create a new vault",
                "parameters": [
                    {
                        "description": "Vault info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateVaultRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Vault"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/vault-category": {
            "post": {
                "description": "Create and issue a new asset on Stellar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vault Category"
                ],
                "summary": "Create a new vault category",
                "parameters": [
                    {
                        "description": "Vault Category info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateVaultCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.VaultCategory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/wallets": {
            "get": {
                "description": "List wallets by type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wallets"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Wallet"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wallets"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "Set up wallet",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateWalletRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Wallet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/wallets/fund/": {
            "post": {
                "description": "Fund a wallet with Friendbot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wallets"
                ],
                "summary": "Fund Wallet",
                "parameters": [
                    {
                        "description": "Wallet id",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.FundWalletRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Wallet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Asset": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer",
                    "example": 1000000
                },
                "asset_type": {
                    "type": "string"
                },
                "code": {
                    "type": "string",
                    "example": "USDC"
                },
                "distributor": {
                    "$ref": "#/definitions/entity.Wallet"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "issuer": {
                    "$ref": "#/definitions/entity.Wallet"
                },
                "name": {
                    "type": "string",
                    "example": "USD Coin"
                }
            }
        },
        "entity.Currency": {
            "type": "object",
            "properties": {
                "anchorAsset": {
                    "type": "string"
                },
                "anchorAssetType": {
                    "type": "string"
                },
                "approvalCriteria": {
                    "type": "string"
                },
                "approvalServer": {
                    "type": "string"
                },
                "attestationOfReserve": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "collateralAddressMessages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "collateralAddressSignatures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "collateralAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "conditions": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "displayDecimals": {
                    "type": "integer"
                },
                "fixedNumber": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "isAssetAnchored": {
                    "type": "boolean"
                },
                "isUnlimited": {
                    "type": "boolean"
                },
                "issuer": {
                    "type": "string"
                },
                "maxNumber": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "redemptionInstructions": {
                    "type": "string"
                },
                "regulated": {
                    "type": "boolean"
                }
            }
        },
        "entity.Documentation": {
            "type": "object",
            "properties": {
                "orgDBA": {
                    "type": "string"
                },
                "orgDescription": {
                    "type": "string"
                },
                "orgGithub": {
                    "type": "string"
                },
                "orgKeybase": {
                    "type": "string"
                },
                "orgLogo": {
                    "type": "string"
                },
                "orgName": {
                    "type": "string"
                },
                "orgOfficialEmail": {
                    "type": "string"
                },
                "orgPhoneNumber": {
                    "type": "string"
                },
                "orgPhoneNumberAttestation": {
                    "type": "string"
                },
                "orgPhysicalAddress": {
                    "type": "string"
                },
                "orgPhysicalAddressAttestation": {
                    "type": "string"
                },
                "orgTwitter": {
                    "type": "string"
                },
                "orgURL": {
                    "type": "string"
                }
            }
        },
        "entity.Key": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "publicKey": {
                    "type": "string",
                    "example": "GCK..."
                },
                "walletId": {
                    "type": "integer",
                    "example": 1
                },
                "weight": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "entity.Principal": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "github": {
                    "type": "string"
                },
                "idphotoHash": {
                    "type": "string"
                },
                "keybase": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string"
                },
                "verificationPhotoHash": {
                    "type": "string"
                }
            }
        },
        "entity.Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Admin"
                }
            }
        },
        "entity.RolePermissionResponse": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "example": "Edit action"
                },
                "name": {
                    "type": "string",
                    "example": "Edit"
                }
            }
        },
        "entity.TomlData": {
            "type": "object",
            "properties": {
                "accounts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "currencies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Currency"
                    }
                },
                "documentation": {
                    "$ref": "#/definitions/entity.Documentation"
                },
                "federationServer": {
                    "type": "string"
                },
                "horizonURL": {
                    "type": "string"
                },
                "networkPassphrase": {
                    "type": "string"
                },
                "principals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Principal"
                    }
                },
                "signingKey": {
                    "type": "string"
                },
                "transferServer": {
                    "type": "string"
                },
                "validators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Validator"
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "entity.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role_id": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.UserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "role_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.UserRole": {
            "type": "object",
            "properties": {
                "id_role": {
                    "type": "string"
                },
                "id_user": {
                    "type": "string"
                }
            }
        },
        "entity.Validator": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "history": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                }
            }
        },
        "entity.Vault": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Treasury"
                },
                "vault_category": {
                    "$ref": "#/definitions/entity.VaultCategory"
                },
                "wallet": {
                    "$ref": "#/definitions/entity.Wallet"
                }
            }
        },
        "entity.VaultCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Treasury"
                }
            }
        },
        "entity.Wallet": {
            "type": "object",
            "properties": {
                "funded": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "key": {
                    "$ref": "#/definitions/entity.Key"
                },
                "type": {
                    "type": "string",
                    "example": "sponsor"
                }
            }
        },
        "v1.BurnAssetRequest": {
            "type": "object",
            "required": [
                "amount",
                "id"
            ],
            "properties": {
                "amount": {
                    "type": "string",
                    "example": "1000"
                },
                "id": {
                    "type": "string",
                    "example": "001"
                },
                "sponsor_id": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "v1.ClawbackAssetRequest": {
            "type": "object",
            "required": [
                "amount",
                "code",
                "from"
            ],
            "properties": {
                "amount": {
                    "type": "string",
                    "example": "1000"
                },
                "code": {
                    "type": "string",
                    "example": "USDC"
                },
                "from": {
                    "type": "string",
                    "example": "GDKIJJIKXLOM2NRMPNQZUUYK24ZPVFC6426GZAICZ6E5PQG2MIPIMB2L"
                },
                "sponsor_id": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "v1.CreateAssetRequest": {
            "type": "object",
            "required": [
                "asset_type",
                "code",
                "name"
            ],
            "properties": {
                "amount": {
                    "type": "string",
                    "example": "1000"
                },
                "asset_type": {
                    "type": "string",
                    "example": "security_token"
                },
                "code": {
                    "type": "string",
                    "example": "USDC"
                },
                "limit": {
                    "type": "integer",
                    "example": 1000
                },
                "name": {
                    "type": "string",
                    "example": "USDC"
                },
                "set_flags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"AUTH_REQUIRED_FLAGS\"",
                        " \"AUTH_REVOCABLE_FLAGS\"",
                        "\"AUTH_CLAWBACK_ENABLED\"]"
                    ]
                },
                "sponsor_id": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "v1.CreateVaultCategoryRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Treasury"
                }
            }
        },
        "v1.CreateVaultRequest": {
            "type": "object"
        },
        "v1.CreateWalletRequest": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "example": "sponsor"
                }
            }
        },
        "v1.FundWalletRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.MintAssetRequest": {
            "type": "object",
            "required": [
                "amount",
                "code",
                "id"
            ],
            "properties": {
                "amount": {
                    "type": "string",
                    "example": "1000"
                },
                "code": {
                    "type": "string",
                    "example": "USDC"
                },
                "id": {
                    "type": "string",
                    "example": "12"
                },
                "sponsor_id": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "v1.TransferAssetRequest": {
            "type": "object",
            "required": [
                "amount",
                "asset_id",
                "destination_wallet_pk",
                "source_wallet_id"
            ],
            "properties": {
                "amount": {
                    "type": "string",
                    "example": "12"
                },
                "asset_id": {
                    "type": "string",
                    "example": "12"
                },
                "destination_wallet_pk": {
                    "type": "string",
                    "example": "GABCD...."
                },
                "source_wallet_id": {
                    "type": "integer",
                    "example": 1
                },
                "sponsor_id": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "v1.UpdateAuthFlagsRequest": {
            "type": "object",
            "required": [
                "code",
                "issuer"
            ],
            "properties": {
                "clear_flags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"TRUST_LINE_CLAWBACK_ENABLED\"]"
                    ]
                },
                "code": {
                    "type": "string",
                    "example": "USDC"
                },
                "issuer": {
                    "type": "integer",
                    "example": 2
                },
                "set_flags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"TRUST_LINE_AUTHORIZED\"",
                        " \"TRUST_LINE_AUTHORIZED_TO_MAINTAIN_LIABILITIES\"",
                        "\"TRUST_LINE_CLAWBACK_ENABLED\"]"
                    ]
                },
                "trustor_id": {
                    "type": "integer",
                    "example": 2
                },
                "trustor_pk": {
                    "type": "string",
                    "example": "2"
                }
            }
        },
        "v1.response": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "message"
                }
            }
        },
        "v1.userResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/entity.User"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
