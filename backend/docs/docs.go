// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Get contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract"
                ],
                "summary": "Get contract",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Contract"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/.well-known/stellar.toml": {
            "get": {
                "description": "Retrieve a TOML file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve a TOML file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset issuer",
                        "name": "asset_issuer",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.TomlData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/asset": {
            "get": {
                "description": "Get asset by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Get asset by id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Asset"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/assets": {
            "get": {
                "description": "Get all assets with optional pagination and filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Get all assets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by asset name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by asset type",
                        "name": "asset_type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page for pagination",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.PaginatedAssetsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create and issue a new asset on Stellar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Create a new asset",
                "parameters": [
                    {
                        "description": "Asset info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateAssetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Asset"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/assets/auth-flags": {
            "post": {
                "description": "Update the authorization flags of a trust line on Stellar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Update authorization flags of a trust line",
                "parameters": [
                    {
                        "description": "Authorization flags",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateAuthFlagsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Asset"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/assets/burn": {
            "post": {
                "description": "Burn an asset on Stellar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Burn an asset",
                "parameters": [
                    {
                        "description": "Asset info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.BurnAssetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Asset"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/assets/clawback": {
            "post": {
                "description": "Clawback an asset on Stellar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Clawback an asset",
                "parameters": [
                    {
                        "description": "Asset info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.ClawbackAssetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/assets/generate-toml": {
            "post": {
                "description": "Create a TOML file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Create a TOML file",
                "parameters": [
                    {
                        "description": "TOML info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.TomlData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.TomlData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/assets/mint": {
            "post": {
                "description": "Mint an asset on Stellar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Mint an asset",
                "parameters": [
                    {
                        "description": "Asset info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.MintAssetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Asset"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/assets/toml": {
            "get": {
                "description": "Get TOML data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Get TOML data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset issuer",
                        "name": "asset_issuer",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.TomlData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/assets/transfer": {
            "post": {
                "description": "Transfer an asset between wallets on Stellar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Transfer an asset",
                "parameters": [
                    {
                        "description": "Transfer info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.TransferAssetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/assets/update-contract-id": {
            "put": {
                "description": "Update a Contract ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Update a Contract ID",
                "parameters": [
                    {
                        "description": "Contract ID",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateContractIdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateContractIdRequest"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/assets/update-toml": {
            "put": {
                "description": "Update a TOML file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Update a TOML file",
                "parameters": [
                    {
                        "description": "TOML info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.TomlData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.TomlData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/assets/{id}/image": {
            "post": {
                "description": "Upload a base64 encoded image for a specific asset by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Upload image for an asset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Base64 Encoded Asset Image",
                        "name": "image",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/assets/{id}/image.png": {
            "get": {
                "description": "Fetch the image of a specified asset using its ID",
                "produces": [
                    "image/png"
                ],
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve asset image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Asset ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/contract": {
            "post": {
                "description": "Create new contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract"
                ],
                "summary": "Create a new contract",
                "parameters": [
                    {
                        "description": "Contract info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateContractRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Contract"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/contract/history": {
            "put": {
                "description": "Update contract history",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract"
                ],
                "summary": "Update contract history",
                "parameters": [
                    {
                        "description": "History info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateContractHistoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.ContractHistory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "post": {
                "description": "Add contract history",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Contract"
                ],
                "summary": "Add contract history",
                "parameters": [
                    {
                        "description": "History info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.AddContractHistoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.ContractHistory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/contracts": {
            "get": {
                "description": "Retrieve a list of history of contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ContractHistory"
                ],
                "summary": "Get contract history",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page for pagination",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Contract"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/log_transactions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all transactions logs within a specific time range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Log Transactions"
                ],
                "summary": "Get all transactions logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Time range (e.g., last 24 hours, last 7 days, last 30 days)",
                        "name": "time_range",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.LogTransaction"
                        }
                    }
                }
            }
        },
        "/log_transactions/asset/{asset_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all transactions logs for a specific asset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Log Transactions"
                ],
                "summary": "Get transactions logs by Asset ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Asset ID",
                        "name": "asset_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.LogTransaction"
                        }
                    }
                }
            }
        },
        "/log_transactions/assets/sum/{time_range}/{time_frame}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get sum of amounts for all assets, grouped by a specified time frame (e.g., '1h' for 1 hour)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Log Transactions"
                ],
                "summary": "Get sum of amounts for all assets within a specific time frame",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Time range for the query (e.g., '24h')",
                        "name": "time_range",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Time frame for grouping (e.g., '1h'). Default is '1h'",
                        "name": "time_frame",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of sum log transactions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.SumLogTransaction"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid time_frame format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/log_transactions/assets/{asset_id}/type/{transaction_type_id}/sum/{time_range}/{time_frame}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get sum of amounts for a specific asset, grouped by a specified time frame (e.g., '1h' for 1 hour) and a specific transaction type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Log Transactions"
                ],
                "summary": "Get sum of amounts by Asset ID within a specific time frame",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Asset ID",
                        "name": "asset_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Transaction type ID (e.g., '0' for all transactions, '1' for type create asset '2' for mint asset)",
                        "name": "transaction_type_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Time range for the query (e.g., '24h' or '1d' '7d' '30d')",
                        "name": "time_range",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Time frame for the query (e.g., '1h' '2h' '24h' '36h')",
                        "name": "time_frame",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sum log transaction for the specified asset",
                        "schema": {
                            "$ref": "#/definitions/entity.SumLogTransaction"
                        }
                    },
                    "400": {
                        "description": "invalid transaction type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/log_transactions/last_transactions/{transaction_type_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get last transactions logs for a specific transaction type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Log Transactions"
                ],
                "summary": "Get last transactions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transaction Type ID",
                        "name": "transaction_type_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.LogTransaction"
                        }
                    }
                }
            }
        },
        "/log_transactions/supply/{asset_id}/{time_range}/{time_frame}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get sum of supply for a specific asset, grouped by a specified time frame (e.g., '1h' for 1 hour)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Log Transactions"
                ],
                "summary": "Get sum of supply by Asset ID within a specific time frame",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Asset ID",
                        "name": "asset_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Time range for the query (e.g., '24h' or '1d' '7d' '30d')",
                        "name": "time_range",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Time frame for the query (e.g., '1h' '2h' '24h' '36h')",
                        "name": "time_frame",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.SumLogTransaction"
                        }
                    },
                    "400": {
                        "description": "Invalid time_frame format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/log_transactions/transaction_type/{transaction_type_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all transactions logs for a specific transaction type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Log Transactions"
                ],
                "summary": "Get transactions logs by Transaction Type ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transaction Type ID",
                        "name": "transaction_type_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.LogTransaction"
                        }
                    }
                }
            }
        },
        "/log_transactions/user/{user_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all transactions logs for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Log Transactions"
                ],
                "summary": "Get transactions logs by User ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.LogTransaction"
                        }
                    }
                }
            }
        },
        "/role": {
            "get": {
                "description": "List role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Role"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Create a new role",
                "parameters": [
                    {
                        "description": "Role info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.RoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.RoleRequest"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/role-permission": {
            "put": {
                "description": "Update roles permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RolesPermissions"
                ],
                "summary": "Update roles permissions",
                "parameters": [
                    {
                        "description": "Roles permissions information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.RolePermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated roles permissions information",
                        "schema": {
                            "$ref": "#/definitions/v1.RolePermissionRequest"
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Failed to update roles permissions",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/role-permission/permissions": {
            "get": {
                "description": "permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Permissions"
                ],
                "summary": "Permissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Permission"
                            }
                        }
                    }
                }
            }
        },
        "/role-permission/role-permissions": {
            "get": {
                "description": "Roles permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RolePermissions"
                ],
                "summary": "Roles permissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.RolePermissionResponse"
                            }
                        }
                    }
                }
            }
        },
        "/role-permission/user-permissions": {
            "get": {
                "description": "User permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RolePermissions"
                ],
                "summary": "User permissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.UserPermissionResponse"
                            }
                        }
                    }
                }
            }
        },
        "/role/{id}": {
            "put": {
                "description": "Update a role by providing the Role ID and the updated information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Update a role",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Role info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.RoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated role information",
                        "schema": {
                            "$ref": "#/definitions/entity.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found: Role not found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Failed to update role",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a role by providing the Role ID and the updated information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "Delete a role",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Role info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.RoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated role information",
                        "schema": {
                            "$ref": "#/definitions/entity.RoleDelete"
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found: Role not found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Failed to delete role",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/soroban-transactions/sign": {
            "post": {
                "description": "Signed a XDR transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Soroban"
                ],
                "summary": "Signed Transaction",
                "parameters": [
                    {
                        "description": "Signed a XDR transaction",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.SignedTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/soroban-transactions/submit": {
            "post": {
                "description": "Submit a XDR transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Soroban"
                ],
                "summary": "Submit Transaction",
                "parameters": [
                    {
                        "description": "Submit a XDR transaction",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.SubmitTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "description": "Create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "operationId": "create",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.userResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Autentication User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Autentication User",
                "operationId": "autentication",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.userResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/user/logout": {
            "post": {
                "description": "Logout User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Logout User",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.userResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Forget Password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Forget Password",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserResponse"
                        }
                    }
                }
            }
        },
        "/users/edit-users-role": {
            "post": {
                "description": "Edit users role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Edit users role",
                "operationId": "editUsersRole",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserRole"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/users/list-users": {
            "get": {
                "description": "List users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "GET All Users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.UserResponse"
                            }
                        }
                    }
                }
            }
        },
        "/users/profile": {
            "get": {
                "description": "Get PRofile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "GET Profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserResponse"
                        }
                    }
                }
            }
        },
        "/vault": {
            "post": {
                "description": "Create and issue a new asset on Stellar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vault"
                ],
                "summary": "Create a new vault",
                "parameters": [
                    {
                        "description": "CreateVaultRequest",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateVaultRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Vault"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/vault-asset/{id}": {
            "put": {
                "description": "Update a vault by providing the Vault ID and the updated the asset.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vault"
                ],
                "summary": "Update a vault asset",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Vault ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Vault asset info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateVaultAssetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated vault asset information",
                        "schema": {
                            "$ref": "#/definitions/entity.Vault"
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found: Vault not found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Failed to update vault asset",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/vault-category": {
            "get": {
                "description": "Get all vault categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vault category"
                ],
                "summary": "Get all vault categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.VaultCategory"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create and issue a new asset on Stellar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vault Category"
                ],
                "summary": "Create a new vault category",
                "parameters": [
                    {
                        "description": "Vault Category info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateVaultCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.VaultCategory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/vault-category/{id}": {
            "put": {
                "description": "Update a vault category by providing the Vault Category ID and the updated information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vault Category"
                ],
                "summary": "Update a vault category",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Vault Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Vault Category info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.UpdateVaultCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated vault category information",
                        "schema": {
                            "$ref": "#/definitions/entity.Vault"
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found: Vault category not found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Failed to update vault category",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/vault-delete/{id}": {
            "put": {
                "description": "Update a vault by providing the Vault ID and the updated the status.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vault"
                ],
                "summary": "Update a vault status",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Vault ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated vault status information",
                        "schema": {
                            "$ref": "#/definitions/entity.Vault"
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found: Vault not found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Failed to update vault status",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/vault/list": {
            "get": {
                "description": "Retrieve a list of all vaults, with optional pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vault"
                ],
                "summary": "Get all vaults",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page for pagination",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Vault"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/vault/{id}": {
            "get": {
                "description": "Get vault",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vault"
                ],
                "summary": "Get vault",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Vault"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/wallets": {
            "get": {
                "description": "List wallets by type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wallets"
                ],
                "summary": "List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Type",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Wallet"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wallets"
                ],
                "summary": "Create",
                "parameters": [
                    {
                        "description": "Set up wallet",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.CreateWalletRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Wallet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/wallets/fund/": {
            "post": {
                "description": "Fund a wallet with Friendbot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wallets"
                ],
                "summary": "Fund Wallet",
                "parameters": [
                    {
                        "description": "Wallet id",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1.FundWalletRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Wallet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/wallets/sponsor_pk/": {
            "get": {
                "description": "Get Sponsor Public Key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wallets"
                ],
                "summary": "Get Sponsor Public Key",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Asset": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer",
                    "example": 1000000
                },
                "asset_type": {
                    "type": "string"
                },
                "code": {
                    "type": "string",
                    "example": "USDC"
                },
                "contract_id": {
                    "type": "string"
                },
                "distributor": {
                    "$ref": "#/definitions/entity.Wallet"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "image": {
                    "type": "string"
                },
                "issuer": {
                    "$ref": "#/definitions/entity.Wallet"
                },
                "name": {
                    "type": "string",
                    "example": "USD Coin"
                }
            }
        },
        "entity.Contract": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "asset": {
                    "$ref": "#/definitions/entity.Asset"
                },
                "compound": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "min_deposit": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "Smart Contract"
                },
                "penalty_rate": {
                    "type": "integer"
                },
                "term": {
                    "type": "integer"
                },
                "vault": {
                    "$ref": "#/definitions/entity.Vault"
                },
                "yield_rate": {
                    "type": "integer"
                }
            }
        },
        "entity.ContractHistory": {
            "type": "object",
            "properties": {
                "contract": {
                    "$ref": "#/definitions/entity.Contract"
                },
                "deposit_amount": {
                    "type": "number"
                },
                "deposited_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "user": {
                    "$ref": "#/definitions/entity.User"
                },
                "withdraw_amount": {
                    "type": "number"
                },
                "withdrawn_at": {
                    "type": "string"
                }
            }
        },
        "entity.Currency": {
            "type": "object",
            "properties": {
                "anchor_asset": {
                    "type": "string"
                },
                "anchor_asset_type": {
                    "type": "string"
                },
                "approval_criteria": {
                    "type": "string"
                },
                "approval_server": {
                    "type": "string"
                },
                "attestation_of_reserve": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "collateral_address_messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "collateral_address_signatures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "collateral_addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "conditions": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "display_decimals": {
                    "type": "integer"
                },
                "fixed_number": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "is_asset_anchored": {
                    "type": "boolean"
                },
                "is_unlimited": {
                    "type": "boolean"
                },
                "issuer": {
                    "type": "string"
                },
                "max_number": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "redemption_instructions": {
                    "type": "string"
                },
                "regulated": {
                    "type": "boolean"
                }
            }
        },
        "entity.Documentation": {
            "type": "object",
            "properties": {
                "ORG_DBA": {
                    "type": "string"
                },
                "ORG_DESCRIPTION": {
                    "type": "string"
                },
                "ORG_GITHUB": {
                    "type": "string"
                },
                "ORG_KEYBASE": {
                    "type": "string"
                },
                "ORG_LOGO": {
                    "type": "string"
                },
                "ORG_NAME": {
                    "type": "string"
                },
                "ORG_OFFICIAL_EMAIL": {
                    "type": "string"
                },
                "ORG_PHONE_NUMBER": {
                    "type": "string"
                },
                "ORG_PHONE_NUMBER_ATTESTATION": {
                    "type": "string"
                },
                "ORG_PHYSICAL_ADDRESS": {
                    "type": "string"
                },
                "ORG_PHYSICAL_ADDRESS_ATTESTATION": {
                    "type": "string"
                },
                "ORG_TWITTER": {
                    "type": "string"
                },
                "ORG_URL": {
                    "type": "string"
                }
            }
        },
        "entity.Key": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "publicKey": {
                    "type": "string",
                    "example": "GCK..."
                },
                "walletId": {
                    "type": "integer",
                    "example": 1
                },
                "weight": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "entity.LogTransaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 100000
                },
                "asset": {
                    "$ref": "#/definitions/entity.Asset"
                },
                "current_main_vault": {
                    "type": "number",
                    "example": 1000
                },
                "current_supply": {
                    "type": "number",
                    "example": 1000
                },
                "date": {
                    "type": "string",
                    "example": "2023-08-10T14:30:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Mint Asset"
                },
                "destination_pk": {
                    "type": "string",
                    "example": "GSDC..."
                },
                "log_id": {
                    "type": "integer",
                    "example": 1
                },
                "origin_pk": {
                    "type": "string",
                    "example": "GSDC..."
                },
                "transaction_type_id": {
                    "type": "integer",
                    "example": 1
                },
                "user_id": {
                    "type": "integer",
                    "example": 42
                }
            }
        },
        "entity.Permission": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "description"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "name"
                }
            }
        },
        "entity.Principal": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "github": {
                    "type": "string"
                },
                "id_photo_hash": {
                    "type": "string"
                },
                "keybase": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string"
                },
                "verification_photo_hash": {
                    "type": "string"
                }
            }
        },
        "entity.Role": {
            "type": "object",
            "properties": {
                "admin": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Admin"
                }
            }
        },
        "entity.RoleDelete": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "new_users_role_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "entity.RolePermissionResponse": {
            "type": "object",
            "properties": {
                "permission_id": {
                    "type": "integer",
                    "example": 1
                },
                "role_id": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "entity.RoleRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Admin"
                }
            }
        },
        "entity.SumLogTransaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "example": [
                        100000
                    ]
                },
                "asset": {
                    "$ref": "#/definitions/entity.Asset"
                },
                "date": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "2023-08-10T14:30:00Z"
                    ]
                },
                "quantity": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1
                    ]
                }
            }
        },
        "entity.TomlData": {
            "type": "object",
            "properties": {
                "ACCOUNTS": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "CURRENCIES": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Currency"
                    }
                },
                "DOCUMENTATION": {
                    "$ref": "#/definitions/entity.Documentation"
                },
                "FEDERATION_SERVER": {
                    "type": "string"
                },
                "HORIZON_URL": {
                    "type": "string"
                },
                "NETWORK_PASSPHRASE": {
                    "type": "string"
                },
                "PRINCIPALS": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Principal"
                    }
                },
                "SIGNING_KEY": {
                    "type": "string"
                },
                "TRANSFER_SERVER": {
                    "type": "string"
                },
                "VALIDATORS": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Validator"
                    }
                },
                "VERSION": {
                    "type": "string"
                }
            }
        },
        "entity.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role_id": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.UserPermissionResponse": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "example": "Edit action"
                },
                "name": {
                    "type": "string",
                    "example": "Edit"
                }
            }
        },
        "entity.UserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "role_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "vault": {
                    "$ref": "#/definitions/entity.Vault"
                },
                "vault_id": {
                    "type": "integer"
                }
            }
        },
        "entity.UserRole": {
            "type": "object",
            "properties": {
                "id_role": {
                    "type": "string"
                },
                "id_user": {
                    "type": "string"
                }
            }
        },
        "entity.Validator": {
            "type": "object",
            "properties": {
                "ALIAS": {
                    "type": "string"
                },
                "DISPLAY_NAME": {
                    "type": "string"
                },
                "HISTORY": {
                    "type": "string"
                },
                "HOST": {
                    "type": "string"
                },
                "PUBLIC_KEY": {
                    "type": "string"
                }
            }
        },
        "entity.Vault": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Treasury"
                },
                "owner_id": {
                    "type": "integer"
                },
                "vault_category": {
                    "$ref": "#/definitions/entity.VaultCategory"
                },
                "vault_category_id": {
                    "type": "integer"
                },
                "wallet": {
                    "$ref": "#/definitions/entity.Wallet"
                }
            }
        },
        "entity.VaultCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Treasury"
                },
                "theme": {
                    "type": "string",
                    "example": "blue"
                }
            }
        },
        "entity.Wallet": {
            "type": "object",
            "properties": {
                "funded": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "key": {
                    "$ref": "#/definitions/entity.Key"
                },
                "type": {
                    "type": "string",
                    "example": "sponsor"
                }
            }
        },
        "v1.AddContractHistoryRequest": {
            "type": "object"
        },
        "v1.BurnAssetRequest": {
            "type": "object",
            "required": [
                "amount",
                "id"
            ],
            "properties": {
                "amount": {
                    "type": "string",
                    "example": "1000"
                },
                "current_main_vault": {
                    "type": "number",
                    "example": 1000
                },
                "current_supply": {
                    "type": "number",
                    "example": 1000
                },
                "id": {
                    "type": "string",
                    "example": "001"
                },
                "sponsor_id": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "v1.ClawbackAssetRequest": {
            "type": "object",
            "required": [
                "amount",
                "code",
                "from"
            ],
            "properties": {
                "amount": {
                    "type": "string",
                    "example": "1000"
                },
                "code": {
                    "type": "string",
                    "example": "USDC"
                },
                "current_main_vault": {
                    "type": "number",
                    "example": 1000
                },
                "current_supply": {
                    "type": "number",
                    "example": 1000
                },
                "from": {
                    "type": "string",
                    "example": "GDKIJJIKXLOM2NRMPNQZUUYK24ZPVFC6426GZAICZ6E5PQG2MIPIMB2L"
                },
                "sponsor_id": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "v1.CreateAssetRequest": {
            "type": "object",
            "required": [
                "asset_type",
                "code",
                "name"
            ],
            "properties": {
                "amount": {
                    "type": "string",
                    "example": "1000"
                },
                "asset_type": {
                    "type": "string",
                    "example": "security_token"
                },
                "code": {
                    "type": "string",
                    "example": "USDC"
                },
                "image": {
                    "type": "string",
                    "example": "iVBORw0KGgoAAAANSUhEUgAACqoAAAMMCAMAAAAWqpRaAAADAFBMVEX///..."
                },
                "limit": {
                    "type": "integer",
                    "example": 1000
                },
                "name": {
                    "type": "string",
                    "example": "USDC"
                },
                "set_flags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"AUTH_REQUIRED_FLAGS\"",
                        " \"AUTH_REVOCABLE_FLAGS\"",
                        "\"AUTH_CLAWBACK_ENABLED\"]"
                    ]
                },
                "sponsor_id": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "v1.CreateContractRequest": {
            "type": "object",
            "required": [
                "address",
                "asset_id",
                "min_deposit",
                "name",
                "penalty_rate",
                "term",
                "vault_id",
                "yield_rate"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "example": "GSDSC..."
                },
                "asset_id": {
                    "type": "string",
                    "example": "1"
                },
                "compound": {
                    "type": "integer",
                    "example": 1
                },
                "min_deposit": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Treasury"
                },
                "penalty_rate": {
                    "type": "integer",
                    "example": 1
                },
                "term": {
                    "type": "integer",
                    "example": 60
                },
                "vault_id": {
                    "type": "string",
                    "example": "1"
                },
                "yield_rate": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.CreateVaultCategoryRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Treasury"
                },
                "theme": {
                    "type": "string",
                    "example": "blue"
                }
            }
        },
        "v1.CreateVaultRequest": {
            "type": "object",
            "required": [
                "assets_id",
                "name"
            ],
            "properties": {
                "assets_id": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "Treasury"
                },
                "owner_id": {
                    "type": "integer"
                },
                "vault_category_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.CreateWalletRequest": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "example": "sponsor"
                }
            }
        },
        "v1.FundWalletRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.MintAssetRequest": {
            "type": "object",
            "required": [
                "amount",
                "code",
                "id"
            ],
            "properties": {
                "amount": {
                    "type": "string",
                    "example": "1000"
                },
                "code": {
                    "type": "string",
                    "example": "USDC"
                },
                "current_main_vault": {
                    "type": "number",
                    "example": 1000
                },
                "current_supply": {
                    "type": "number",
                    "example": 1000
                },
                "id": {
                    "type": "string",
                    "example": "12"
                },
                "sponsor_id": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "v1.PaginatedAssetsResponse": {
            "type": "object",
            "properties": {
                "assets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Asset"
                    }
                },
                "totalPages": {
                    "type": "integer"
                }
            }
        },
        "v1.RolePermissionRequest": {
            "type": "object",
            "properties": {
                "is_add": {
                    "type": "boolean",
                    "example": false
                },
                "permission_id": {
                    "type": "integer",
                    "example": 1
                },
                "role_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.SignedTransactionRequest": {
            "type": "object",
            "required": [
                "envelope"
            ],
            "properties": {
                "envelope": {
                    "type": "string",
                    "example": "KJDSKD..."
                },
                "wallet_pk": {
                    "type": "string",
                    "example": "GDSKJG..."
                }
            }
        },
        "v1.SubmitTransactionRequest": {
            "type": "object",
            "required": [
                "envelope"
            ],
            "properties": {
                "envelope": {
                    "type": "string",
                    "example": "KJDSKD..."
                }
            }
        },
        "v1.TransferAssetRequest": {
            "type": "object",
            "required": [
                "amount",
                "asset_id",
                "destination_wallet_pk",
                "source_wallet_id"
            ],
            "properties": {
                "amount": {
                    "type": "string",
                    "example": "12"
                },
                "asset_id": {
                    "type": "string",
                    "example": "12"
                },
                "current_main_vault": {
                    "type": "number",
                    "example": 1000
                },
                "current_supply": {
                    "type": "number",
                    "example": 1000
                },
                "destination_wallet_pk": {
                    "type": "string",
                    "example": "GABCD...."
                },
                "source_wallet_id": {
                    "type": "integer",
                    "example": 1
                },
                "sponsor_id": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "v1.UpdateAuthFlagsRequest": {
            "type": "object",
            "required": [
                "code",
                "issuer"
            ],
            "properties": {
                "clear_flags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"TRUST_LINE_CLAWBACK_ENABLED\"]"
                    ]
                },
                "code": {
                    "type": "string",
                    "example": "USDC"
                },
                "issuer": {
                    "type": "integer",
                    "example": 2
                },
                "set_flags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"TRUST_LINE_AUTHORIZED\"",
                        " \"TRUST_LINE_AUTHORIZED_TO_MAINTAIN_LIABILITIES\"",
                        "\"TRUST_LINE_CLAWBACK_ENABLED\"]"
                    ]
                },
                "trustor_id": {
                    "type": "integer",
                    "example": 2
                },
                "trustor_pk": {
                    "type": "string",
                    "example": "2"
                }
            }
        },
        "v1.UpdateContractHistoryRequest": {
            "type": "object"
        },
        "v1.UpdateContractIdRequest": {
            "type": "object",
            "properties": {
                "contract_id": {
                    "type": "string",
                    "example": "iVBORw0KGgoAAAANSUhEUgAACqoAAAMMCAMAAAAWqpRaAAADAFBMVEX///..."
                }
            }
        },
        "v1.UpdateVaultAssetRequest": {
            "type": "object",
            "required": [
                "asset_code",
                "asset_issuer_pk"
            ],
            "properties": {
                "asset_code": {
                    "type": "string",
                    "example": "1"
                },
                "asset_issuer_pk": {
                    "type": "string",
                    "example": "1"
                },
                "is_add": {
                    "type": "boolean",
                    "example": true
                },
                "is_remove": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "v1.UpdateVaultCategoryRequest": {
            "type": "object",
            "required": [
                "vault_category_id"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Vault 2"
                },
                "vault_category_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "v1.response": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "v1.userResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/entity.User"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
